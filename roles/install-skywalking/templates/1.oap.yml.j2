---
apiVersion: v1
data:
  metadata-service-mapping.yaml: |
    serviceName: agentless::${LABELS."service.istio.io/canonical-name",LABELS."app.kubernetes.io/name",LABELS.app}
    serviceInstanceName: ${NAME,NAME} # Just to skip the "envsubst" replacement
  alarm-settings.yml: |
    rules:
      service_resp_time_rule:
        metrics-name: service_resp_time
        threshold: 20 # 20ms is just for demo
        op: ">"
        period: 5
        count: 1
kind: ConfigMap
metadata:
  name: oap-static-config
  namespace: '{{ skywalking_namespace }}'
---
apiVersion: v1
data:
  core.default.log4j-xml: |-
    <Configuration status="WARN">
       <Appenders>
         <Console name="Console" target="SYSTEM_OUT">
           <PatternLayout charset="UTF-8" pattern="%d - %c - %L [%t] %-5p %x - %m%n"/>
         </Console>
       </Appenders>
       <Loggers>
         <logger name="io.grpc.netty" level="INFO"/>
         <logger name="org.apache.skywalking.oap.server.configuration.api" level="TRACE"/>
         <logger name="org.apache.skywalking.oap.server.configuration.configmap" level="DEBUG"/>
         <Root level="WARN">
           <AppenderRef ref="Console"/>
         </Root>
        </Loggers>
    </Configuration>
kind: ConfigMap
metadata:
  labels:
    app: oap
  name: oap-dynamic-config
  namespace: '{{ skywalking_namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  name: oap
  namespace: '{{ skywalking_namespace }}'
spec:
  selector:
    app: oap
  ports:
    - name: metrics
      port: 1234
    - name: grpc
      port: 11800
    - name: http
      port: 12800

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: oap-init-job # @feature: cluster; set up an init job to initialize ES templates and indices
  namespace: '{{ skywalking_namespace }}'
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Replace
  startingDeadlineSeconds: 20
  schedule: "0 0,16 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: skywalking-oap-sa-cluster
          restartPolicy: Never
          initContainers:
            - name: wait-for-es
              image: '{{ image_repository }}/public/busybox:1.34'
              command:
                - 'sh'
                - '-c'
                - 'for i in $(seq 1 60); do nc -z -w3 elasticsearch.elk 9200 && exit 0 || sleep 5; done; exit 1'
          containers:
            - name: oap-init
              image: '{{ image_repository }}/public/skywalking-oap-server:9.3.0'
              imagePullPolicy: Always
              env: # @feature: cluster; make sure all env vars are the same with the cluster nodes as this will affect templates / indices
                - name: JAVA_OPTS
                  value: "-Dmode=init" # @feature: cluster; set the OAP mode to "init" so the job can complete
                - name: SW_NAMESPACE
                  value: '{{ es_index }}' # ES索引前缀
                - name: SW_OTEL_RECEIVER
                  value: default
                - name: SW_OTEL_RECEIVER_ENABLED_OC_RULES
                  value: vm,oap
                - name: SW_STORAGE
                  value: elasticsearch
                - name: SW_STORAGE_ES_CLUSTER_NODES
                  value: elasticsearch.elk:9200
                - name: SW_TELEMETRY
                  value: prometheus
                - name: SW_METER_ANALYZER_ACTIVE_FILES
                  value: datasource,threadpool,satellite,network-profiling
                - name: TZ
                  value: 'Asia/Shanghai'
              volumeMounts:
                - name: config-volume
                  mountPath: /skywalking/ext-config
          volumes:
            - name: config-volume
              configMap:
                name: oap-static-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oap-deployment
  namespace: '{{ skywalking_namespace }}'
  labels:
    app: oap
spec:
  replicas: 2 # @feature: cluster; set OAP replicas to >1
  selector:
    matchLabels:
      app: oap
  template:
    metadata:
      labels:
        app: oap
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: skywalking-oap-sa-cluster # @feature: cluster; set a service account with Pod "read" permission
      containers:
        - name: oap
          image: '{{ image_repository }}/public/skywalking-oap-server:9.3.0'
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 4000m
              memory: "4096Mi"
            requests:
              cpu: 1000m
              memory: "1024Mi"
          ports:
            - name: metrics # @feature: so11y; set a name for the metrics port that can be referenced in otel config
              containerPort: 1234
            - name: grpc
              containerPort: 11800
            - name: http
              containerPort: 12800
          env:
            - name: JAVA_OPTS
              value: "-Dmode=no-init"
            - name: SW_NAMESPACE
              value: '{{ es_index }}'
            - name: SW_CLUSTER
              value: kubernetes # @feature: cluster; set cluster coordinator to kubernetes
            - name: SW_CLUSTER_K8S_NAMESPACE
              value: '{{ skywalking_namespace }}'
            - name: SW_CLUSTER_K8S_LABEL
              value: app=oap # @feature: cluster; set label selectors to select OAP Pods as a cluster
            - name: SW_OTEL_RECEIVER
              value: default # @feature: so11y;vm;kubernetes-monitor enable OpenTelemetry receiver to receive OpenTelemetry metrics
            - name: SW_OTEL_RECEIVER_ENABLED_OC_RULES
              # @feature: vm; enable vm rules to analyze VM metrics
              # @feature: so11y; enable oap rules to analyze OAP metrics
              # @feature: kubernetes-monitor; enable rules to analyze Kubernetes Cluster/Node/Service metrics
              value: vm,oap,so11y,k8s-cluster,k8s-node,k8s-service,k8s-instance
            - name: SW_STORAGE
              value: elasticsearch
            - name: SW_STORAGE_ES_CLUSTER_NODES
              value: elasticsearch.elk:9200
            - name: SW_TELEMETRY
              value: prometheus # @feature: so11y; expose the metrics of self o11y through prometheus
            - name: SW_CONFIGURATION
              value: k8s-configmap
            - name: TZ
              value: 'Asia/Shanghai'
          volumeMounts:
            - name: config-volume
              mountPath: /skywalking/ext-config
      volumes:
        - name: config-volume
          configMap:
            name: oap-static-config
