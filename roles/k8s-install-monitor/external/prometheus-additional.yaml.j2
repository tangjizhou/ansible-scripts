apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: prometheus-additional
  namespace: monitoring
stringData:
  prometheus-additional.yaml: |-
    - job_name: 'blackbox-tcp'
      metrics_path: /probe
      scrape_interval: 15s
      scrape_timeout: 10s
      params:
        module: [ tcp_connect ]
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        # 只有service的annotation中配置了prometheus.io/tcp_probe=true 的才能被发现
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_tcp_probe ]
          action: keep
          regex: true
        - source_labels: [ __meta_kubernetes_endpoint_node_name ]
          action: replace
          target_label: nodename
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_tcp_probe_port]
          regex: (.+):(.+);(.+)
          replacement: $1:$3
          target_label: __param_target
        - source_labels: [__param_target]
          regex: (.+):(.+)
          replacement: telnet connect to address $1:$2 connection refused
          target_label: blackmsg
        - source_labels: [ __meta_kubernetes_endpoint_node_name, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: instance
        - target_label: __address__
          replacement: blackbox:9115 #fixme 应该使用blackbox的域名，或者k8s的vip+nodeport
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: pod
        - source_labels: [ __meta_kubernetes_service_annotation_maintainer ]
          action: replace
          target_label: maintainer
        - action: replace
          source_labels: [ __meta_kubernetes_endpoint_node_name ]
          target_label: nodename        
      metric_relabel_configs:
        - action: labeldrop
          regex: __meta_kubernetes_.+
    - job_name: 'blackbox-http'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /probe
      params:
        module: [ http_2xx ]
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        # 只有service的annotation中配置了 prometheus.io/http_probe=true 的才进行发现
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_http_probe ]
          action: keep
          regex: true
        - source_labels: [ __meta_kubernetes_endpoint_node_name ]
          action: replace
          target_label: nodename
        - source_labels: [ __address__, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_probe_path ]
          action: replace
          target_label: __param_target
          regex: (.+):(.+);(.+);(.+);(.+)
          replacement: $1:$4$5
        - source_labels: [__param_target]
          regex: (.+):(.+)
          replacement: Failed connect to $1:$2
          target_label: blackmsg
        - target_label: __address__
          replacement: blackbox:9115
        - source_labels: [ __param_target ]
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [ __meta_kubernetes_namespace ]
          target_label: namespace
        - source_labels: [ __meta_kubernetes_service_name ]
          target_label: service
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: pod
        - action: replace
          source_labels: [ __meta_kubernetes_service_annotation_maintainer ]
          target_label: maintainer
        - action: replace
          source_labels: [ __meta_kubernetes_endpoint_node_name ]
          target_label: nodename         
      metric_relabel_configs:
        - action: labeldrop
          regex: __meta_kubernetes_.+
    - job_name: 'exporter-app-metrics'
      scrape_interval: 15s
      scrape_timeout: 10s
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
          action: keep
          regex: true
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [ __meta_kubernetes_namespace ]
          action: replace
          target_label: namespace
        - source_labels: [ __meta_kubernetes_service_name ]
          action: replace
          target_label: service
        - action: replace
          source_labels: [ __meta_kubernetes_endpoint_node_name ]
          target_label: nodename
        - action: replace
          source_labels: [ __meta_kubernetes_service_annotation_maintainer ]
          target_label: maintainer
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: pod
      metric_relabel_configs:
        - action: replace
          source_labels: [ nodename, instance ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: instance
        - action: labeldrop
          regex: __meta_kubernetes_.+
    #k8s集群外的URL监控，添加在此job
    - job_name: 'blackbox-http-external'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /probe
      params:
        module: [ http_2xx ]
      kubernetes_sd_configs:
        - role: service
      relabel_configs:
        # service的annotation中添加label "expernalip: 192.168.1.1"，prometheus.io/http_external_probe=true的才进行发现
        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_http_external_probe ]
          action: keep
          regex: true
        - source_labels: [ __meta_kubernetes_service_annotation_externalip, __meta_kubernetes_service_annotation_prometheus_io_http_external_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_external_probe_path ]
          action: replace
          target_label: __param_target
          regex: (.+);(.+);(.+)
          replacement: $1:$2$3
        - target_label: __address__
          replacement: blackbox:9115
        - source_labels: [ __param_target ]
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [ __meta_kubernetes_namespace ]
          target_label: namespace
        - source_labels: [ __meta_kubernetes_service_name ]
          target_label: service
        - action: replace
          source_labels: [ __meta_kubernetes_service_annotation_maintainer ]
          target_label: maintainer
      metric_relabel_configs:
        - action: labeldrop
          regex: __meta_kubernetes_.+
    - job_name: 'static-external-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['harbor'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
{% for host in groups['nginx'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-rocketmq-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['rocketmq'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-redis-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['redis'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-es-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['elasticsearch'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-kafka-zk-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['kafka'] %}
      - targets:
        - "{{ host }}:9100"
        - "{{ host }}:1234"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
{% for host in groups['zookeeper'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-gauss-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['gaussdb'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename
    - job_name: 'static-eap-nodes'
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      static_configs:
{% for host in groups['eap_server'] %}
      - targets:
        - "{{ host }}:9100"
        labels:
          hostname: {{ hostvars[host].host_name }}
{% endfor %}
      relabel_configs:
        - action: replace
          source_labels: [ hostname, __address__ ]
          regex: ([^.]+)(?::\d+)?;([^:]+)(?::\d+)?
          replacement: $1@$2
          target_label: nodename